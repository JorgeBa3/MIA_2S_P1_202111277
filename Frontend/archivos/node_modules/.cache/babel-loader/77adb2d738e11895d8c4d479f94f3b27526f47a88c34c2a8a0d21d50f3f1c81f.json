{"ast":null,"code":"var _jsxFileName = \"/home/ba3/Escritorio/Archivos-P1/MIA_2S_P1_202111277/Frontend/archivos/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [name, setName] = useState('');\n  const [fileContent, setFileContent] = useState('');\n  const [response, setResponse] = useState('');\n  const handleNameChange = event => {\n    setName(event.target.value);\n  };\n  const handleFileChange = event => {\n    const file = event.target.files[0];\n    if (file) {\n      const reader = new FileReader();\n      reader.onload = e => {\n        setName(e.target.result);\n      };\n      reader.readAsText(file);\n    }\n  };\n  const handleSubmit = async () => {\n    setFileContent(name);\n    const requestBody = {\n      name: name\n    };\n    try {\n      const response = await fetch('http://localhost:8080/greet', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(requestBody)\n      });\n      const data = await response.json();\n      setResponse(data.message); // Aquí mostramos la respuesta del servidor\n    } catch (error) {\n      console.error('Error:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Proyecto 1\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Entrada\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      value: name,\n      onChange: handleNameChange,\n      placeholder: \"Script de entrada: \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      onChange: handleFileChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSubmit,\n      children: \"Ejecutar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      value: `La información es: ${response}`,\n      readOnly: true,\n      placeholder: \"Aqu\\xED se mostrar\\xE1 la informaci\\xF3n\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"Xn8GxnAhodYT4i/NMVIgwS96Am0=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","App","_s","name","setName","fileContent","setFileContent","response","setResponse","handleNameChange","event","target","value","handleFileChange","file","files","reader","FileReader","onload","e","result","readAsText","handleSubmit","requestBody","fetch","method","headers","body","JSON","stringify","data","json","message","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","placeholder","type","onClick","readOnly","_c","$RefreshReg$"],"sources":["/home/ba3/Escritorio/Archivos-P1/MIA_2S_P1_202111277/Frontend/archivos/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\n\nfunction App() {\n  const [name, setName] = useState('');\n  const [fileContent, setFileContent] = useState('');\n  const [response, setResponse] = useState('');\n\n  const handleNameChange = (event) => {\n    setName(event.target.value);\n  };\n\n  const handleFileChange = (event) => {\n    const file = event.target.files[0];\n    if (file) {\n      const reader = new FileReader();\n      reader.onload = (e) => {\n        setName(e.target.result);\n      };\n      reader.readAsText(file);\n    }\n  };\n\n  const handleSubmit = async () => {\n    setFileContent(name);\n\n    const requestBody = {\n      name: name,\n    };\n\n    try {\n      const response = await fetch('http://localhost:8080/greet', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(requestBody),\n      });\n\n      const data = await response.json();\n      setResponse(data.message); // Aquí mostramos la respuesta del servidor\n    } catch (error) {\n      console.error('Error:', error);\n    }\n  };\n\n  return (\n    <div className=\"container\">\n      <h1>Proyecto 1</h1>\n      <h2>Entrada</h2> \n      <textarea\n        value={name}\n        onChange={handleNameChange}\n        placeholder=\"Script de entrada: \"\n      />\n      <input \n        type=\"file\" \n        onChange={handleFileChange} \n      />\n      <button onClick={handleSubmit}>Ejecutar</button>\n      <textarea\n        value={`La información es: ${response}`}\n        readOnly\n        placeholder=\"Aquí se mostrará la información\"\n      />\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}