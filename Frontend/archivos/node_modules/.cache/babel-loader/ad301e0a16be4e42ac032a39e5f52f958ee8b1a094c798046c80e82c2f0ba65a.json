{"ast":null,"code":"var _jsxFileName = \"/home/ba3/Escritorio/Archivos-P1/MIA_2S_P1_202111277/Frontend/archivos/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [inputText, setInputText] = useState('');\n  const [outputText, setOutputText] = useState('');\n  const handleFileChange = event => {\n    const file = event.target.files[0];\n    const reader = new FileReader();\n    reader.onload = e => {\n      setInputText(e.target.result);\n    };\n    if (file) {\n      reader.readAsText(file);\n    }\n  };\n  const handleSend = async () => {\n    try {\n      const response = await fetch('http://localhost:8080/greet', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          name: inputText\n        })\n      });\n\n      // Asegúrate de que la respuesta sea en formato JSON\n      const data = await response.json();\n\n      // Extrae el mensaje del JSON y actualiza el estado\n      setOutputText(`Respuesta del servidor:\\n${data.message}`);\n    } catch (error) {\n      console.error('Error:', error);\n      setOutputText('Error al obtener la respuesta del servidor.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      textAlign: 'center',\n      margin: '20px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Proyecto 1\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      rows: \"10\",\n      cols: \"50\",\n      value: inputText,\n      onChange: e => setInputText(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      onChange: handleFileChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSend,\n      children: \"Enviar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      rows: \"10\",\n      cols: \"50\",\n      readOnly: true,\n      value: outputText\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"A8x4o6k2o0clyglOPj0vqGJjHFk=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","App","_s","inputText","setInputText","outputText","setOutputText","handleFileChange","event","file","target","files","reader","FileReader","onload","e","result","readAsText","handleSend","response","fetch","method","headers","body","JSON","stringify","name","data","json","message","error","console","style","textAlign","margin","children","fileName","_jsxFileName","lineNumber","columnNumber","rows","cols","value","onChange","type","onClick","readOnly","_c","$RefreshReg$"],"sources":["/home/ba3/Escritorio/Archivos-P1/MIA_2S_P1_202111277/Frontend/archivos/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\n\nconst App = () => {\n  const [inputText, setInputText] = useState('');\n  const [outputText, setOutputText] = useState('');\n\n  const handleFileChange = (event) => {\n    const file = event.target.files[0];\n    const reader = new FileReader();\n\n    reader.onload = (e) => {\n      setInputText(e.target.result);\n    };\n\n    if (file) {\n      reader.readAsText(file);\n    }\n  };\n\n  const handleSend = async () => {\n    try {\n      const response = await fetch('http://localhost:8080/greet', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ name: inputText }),\n      });\n\n      // Asegúrate de que la respuesta sea en formato JSON\n      const data = await response.json();\n\n      // Extrae el mensaje del JSON y actualiza el estado\n      setOutputText(`Respuesta del servidor:\\n${data.message}`);\n    } catch (error) {\n      console.error('Error:', error);\n      setOutputText('Error al obtener la respuesta del servidor.');\n    }\n  };\n\n  return (\n    <div style={{ textAlign: 'center', margin: '20px' }}>\n      <h1>Proyecto 1</h1>\n      <textarea\n        rows=\"10\"\n        cols=\"50\"\n        value={inputText}\n        onChange={(e) => setInputText(e.target.value)}\n      />\n      <br />\n      <input type=\"file\" onChange={handleFileChange} />\n      <br />\n      <button onClick={handleSend}>Enviar</button>\n      <br />\n      <textarea\n        rows=\"10\"\n        cols=\"50\"\n        readOnly\n        value={outputText}\n      />\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}